{"version":3,"sources":["plugins/auth.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;4BAEG,gBAAgB;;;;4BACV,kBAAkB;;AAExC,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,MAAM,EAAE,OAAO,EAAE,IAAI,EAAK;AAC1C,QAAM,CAAC,QAAQ,4BAAM,YAAY,CAAC,CAAC;;AAEnC,WAAS,YAAY,CAAC,GAAG,EAAE;AACzB,QAAI,GAAG,EAAE;AACP,aAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;;AAED,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;AACjC,SAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,SAAS;AACjC,kBAAY,EAAE,OAAO,CAAC,YAAY;AAClC,mBAAa,EAAE;AACb,kBAAU,EAAE,CAAC,OAAO,CAAC;OACtB;KACF,CAAC,CAAC;;AAEH,UAAM,CAAC,IAAI,WAAQ,CAAC,KAAK,CAAC,CAAC;;AAE3B,WAAO,IAAI,EAAE,CAAC;GACf;CACF,CAAC;;AAEF,QAAQ,CAAC,UAAU,GAAG;AACpB,MAAI,EAAE,UAAU;AAChB,SAAO,EAAE,4BAAS;CACnB,CAAC;;qBAEa,QAAQ","file":"auth.js","sourcesContent":["'use strict';\n\nimport JWT from 'hapi-auth-jwt2';\nimport {version} from '../utils/package';\n\nconst register = (server, options, next) => {\n  server.register(JWT, registerAuth);\n\n  function registerAuth(err) {\n    if (err) {\n      return next(err);\n    }\n\n    server.auth.strategy('jwt', 'jwt', {\n      key: process.env.JWT || 'stubJWT',\n      validateFunc: options.validateFunc,\n      verifyOptions: {\n        algorithms: ['HS256']\n      }\n    });\n\n    server.auth.default('jwt');\n\n    return next();\n  }\n};\n\nregister.attributes = {\n  name: 'auth-jwt',\n  version: version()\n};\n\nexport default register;\n"]}